<?xml version="1.0"?>
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by Markus Doering (BGBM) -->
<!-- $Id: newprotocolDatasource.xsd,v 1.10 2004/09/15 15:23:22 m.doering Exp $ -->
<!-- new TDWG protocol based on the DiGIR and BioCASE protocols -->
<xsd:schema targetNamespace="http://www.tdwg.org/schemas/newprotocol/1.0/datasource" xmlns="http://www.tdwg.org/schemas/newprotocol/1.0/datasource" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:include schemaLocation="newprotocolCore.xsd"/>
	<!-- ============================================= -->
	<!--REQUEST DEFINITION-->
	<!--  ============================================= -->
	<xsd:complexType name="requestType">
		<xsd:sequence>
			<xsd:element name="header" type="requestHeader"/>
			<xsd:group ref="requestTypesGroup"/>
			<xsd:element name="diagnostics" type="diagnosticsType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="request" type="requestType">
		<xsd:annotation>
			<xsd:documentation>Request message format.  Must always contain and header and may or maynot contain a payload, based on the type of request being made.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!-- ============================================= -->
	<!--RESPONSE DEFINITION-->
	<!-- ============================================= -->
	<xsd:element name="response" type="responseType">
		<xsd:annotation>
			<xsd:documentation>Response message format for a single datasource. Not to be used by a provider.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="responseType">
		<xsd:sequence>
			<xsd:element name="header" type="responseHeader"/>
			<xsd:choice>
				<xsd:element name="pong" type="pingResponseType"/>
				<xsd:element name="metadata" type="metadataResponseType"/>
				<xsd:element name="capabilities" type="capabilitiesResponseType"/>
				<xsd:element name="inventory" type="inventoryResponseType"/>
				<xsd:element name="search" type="searchResponseType"/>
			</xsd:choice>
			<xsd:element name="diagnostics" type="diagnosticsType">
				<xsd:annotation>
					<xsd:documentation>The diagnostics element can contain many diagnostic pieces of information.  Should the possible diagnostic codes/messages be defined more granularly in a seperate XML Schema?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ===== CAPABILITIES ===== -->
	<xsd:complexType name="capabilitiesResponseType">
		<xsd:sequence>
			<xsd:element name="requestTypes" type="capaRequestTypesType">
				<xsd:annotation>
					<xsd:documentation>Information about the supported request types of this service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="operators" type="capaFilterOperatorsType">
				<xsd:annotation>
					<xsd:documentation>Information about the supported filter operators of this service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="settings">
				<xsd:annotation>
					<xsd:documentation>Information about the local configuration of a datasource.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="minQueryTermLength" type="xsd:integer" minOccurs="0"/>
						<xsd:element name="maxResponseSize" type="xsd:integer" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The size in kilobytes that is the maximum amount of data returned for a single request. Replaces the record number based limitations.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:any minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Allow for more application specific settings.</xsd:documentation>
							</xsd:annotation>
						</xsd:any>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="concepts">
				<xsd:annotation>
					<xsd:documentation>The list of known conceptual schemas and their mapped concepts.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="conceptualSchema" type="conceptualSchemaType" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>holds the namespace of a supported schema.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="security" type="xsd:anyType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>what security related capabilities does the provider have? encryption, access restriction, etc.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="conceptualSchemaType">
		<xsd:sequence minOccurs="0">
			<xsd:element name="concept" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Each mapped/configured concept of a schema of this resource is listed here as a single concept returning a boolean flag if it is searchable.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="conceptType">
							<xsd:attribute name="searchable" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="defaultRecordDefinition" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>A path pointing to a local concept that is considered to represent a record for this datasource and is used to represent the root table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="path" type="pathType" use="required"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="defaultStructure">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="externalLocationType">
							<xsd:sequence minOccurs="0">
								<xsd:any namespace="##http://www.w3.org/2001/XMLSchema" minOccurs="0"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="defaultMapping" type="mappingType"/>
			<xsd:any>
				<xsd:annotation>
					<xsd:documentation>Slot for future custom needs ...</xsd:documentation>
				</xsd:annotation>
			</xsd:any>
		</xsd:sequence>
		<xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
	</xsd:complexType>
	<!-- ===== METADATA ===== -->
	<xsd:complexType name="metadataResponseType">
		<xsd:annotation>
			<xsd:documentation>Simple generic build-in metadata response</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="label" type="metadataLangType" maxOccurs="unbounded"/>
			<xsd:element name="accesspoint" type="xsd:anyURI"/>
			<xsd:element name="abstract" type="metadataLangType" maxOccurs="unbounded"/>
			<xsd:element name="keywords" type="metadataLangType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="citation" type="metadataLangType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rights" type="metadataLangType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="recordDefinition" type="qualifiedConceptType">
				<xsd:annotation>
					<xsd:documentation>A path pointing to a qualified concept that is considered to represent a record for this datasource and is used to represent the root table. This gives an idea of what kind of object is being served by this datasource.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="conceptualSchema" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>holds the namespace of a supported schema.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
					<xsd:attribute name="dateLastUpdated" type="xsd:date" use="optional"/>
					<xsd:attribute name="numberOfRecords" type="xsd:int" use="optional"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="relatedEntities">
				<xsd:annotation>
					<xsd:documentation>The business entity. It is the  responsible organisation for this service, e.g. owner</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="entity" type="metadataEntityType" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
