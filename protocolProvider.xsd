<?xml version="1.0"?>
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by Markus Doering (BGBM) -->
<!-- $Id: newprotocolProvider.xsd,v 1.5 2004/09/13 14:43:50 m.doering Exp $ -->
<!-- new TDWG protocol based on the DiGIR and BioCASE protocols -->
<xsd:schema targetNamespace="http://www.tdwg.org/schemas/newprotocol/1.0/provider" xmlns="http://www.tdwg.org/schemas/newprotocol/1.0/provider" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.tdwg.org/schemas/newprotocol/1.0/datasource" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:include schemaLocation="newprotocolCore.xsd"/>
	<xsd:import namespace="http://www.tdwg.org/schemas/newprotocol/1.0/datasource" schemaLocation="newprotocolDatasource.xsd"/>
	<!-- ============================================= -->
	<!--REQUEST DEFINITION-->
	<!--  ============================================= -->
	<xsd:element name="request" type="requestType">
		<xsd:annotation>
			<xsd:documentation>Request message format.  Must always contain and header and may or maynot contain a payload, based on the type of request being made.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="requestType">
		<xsd:sequence>
			<xsd:element name="header">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="requestHeader">
							<xsd:sequence>
								<xsd:element name="destination" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>If list of destinations is provided, limit the method to the datasources listed. If no destination is provided, contact all known local datasources.</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:attribute name="accesspoint" type="xsd:anyURI" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:group ref="requestTypesGroup"/>
			<xsd:element name="diagnostics" type="diagnosticsType"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============================================= -->
	<!--RESPONSE DEFINITION-->
	<!-- ============================================= -->
	<xsd:element name="response" type="responseType">
		<xsd:annotation>
			<xsd:documentation>Response message format for a single datasource. Not to be used by a provider.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="responseType">
		<xsd:sequence>
			<xsd:element name="header" type="responseHeader">
				<xsd:annotation>
					<xsd:documentation>Header data only for the provider service. Note that each datasource has its own header with source etc.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="pong" type="pingResponseType"/>
				<xsd:element name="datasourceResponse" type="ds:responseType" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:choice>
			<xsd:element name="footer">
				<xsd:annotation>
					<xsd:documentation>The footer holds information about the number of records for paging purposes.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="start" type="xsd:integer" use="required"/>
					<xsd:attribute name="next" type="integerNull" use="required"/>
					<xsd:attribute name="totalReturned" type="xsd:integer" use="required"/>
					<xsd:attribute name="totalMatched" type="xsd:integer" use="optional"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="diagnostics" type="diagnosticsType">
				<xsd:annotation>
					<xsd:documentation>The diagnostics element can contain many diagnostic pieces of information.  Should the possible diagnostic codes/messages be defined more granularly in a seperate XML Schema?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
